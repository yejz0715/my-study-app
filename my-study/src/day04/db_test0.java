
//--Table
//--열:*Field*, 속성, 애트리뷰트 (세개 다 같은말) , 컬럼
//--행:*Record*, 튜플 (두개 다 같은말)

//--관계형 데이터 베이스라고 부름(관련된 데이터들의 집합:편의점판매목록, 도서목록..)
//
//--데이터베이스의 조작운영을 가능하게 하는 프로그램:DBMS(Database Management System)


//--데이터베이스에 활용되는 언어(Language) 
//--SQL:관계형 데이터베이스 관리 시스템(RDBMS)의 데이터를 
//--관리하기 위해 설계된 특수 목적의 프로그래밍 언어
//
//--SQL의 세가지 종류
//--1 DDL(Data Definition Language)정의
//--2 DML(Data Manipulation Language)조작
//--3 DCL(Data Control Language)권한부여
//
//--DDL(Data Definition Language )-데이터 정의어
//--명령의 예:create, alter, drop
//--Create:테이블, 뷰 등을 생성할 때 사용하는 명령
//--Alter:이미 생성되어 있는 테이블 또는 뷰 등의 구조를 수정하기 위한 명령
//--Drop: 이미생성되어 있는 테이블 또는 뷰 등을 삭제하기 위한 명령
//
//--DML(Data Manipulation Language)-데이터 조작어
//--명령의 예: Insert, Update, Delete, Select
//-- Insert: 테이블에 레코드를 추가하기 위한 명령
//-- Update: 테이블에 있는 레코드중 일부 또는 전부를 수정하기 위한 명령
//-- Delete: 테이블에 있는 레코드중 일부 또는 전부를 삭제하기 위한 명령
//-- Select: 테이블에 있는 레코드중 일부 또는 전부를 조회(검색)하여 열람하기 위한 명령
//
//--DCL(Data Control Language)-데이터 제어어
//--명령의 예 : Grant, Revoke
//-- Grant : 특정 사용자에게 권한을 설정
//-- Revoke : 특정 사용자에게 권한을 해제
//
//--기본키(Primary Key):테이블을 구성하는 필드들 중에서 갖는 값들이 빈칸(null)이 없고 서로 다른 값(유일한값)들을 갖고 있어 레코드들을 유일하게 구분해 낼 수 있는 필드
//--테이블을 구성하는 필드들중 자격이 되는 필드중 하나에 부여하는 테이블의 대표값
//--기본키를 지정함으로써 기본키가 지정하지 않았을때 발생할 수 있는 오류들을 미연에 방지할 수 있다.
//--기본키로 지정해서  결함을 없애는 것. 그래서 결함없이 유지되는 것을 개체 무결성 이라고 부릅니다
//
//--외래키(FOREIGN KEY):테이블 간의 필수 포함 관계에 있어 상대 테이블의 특정 필드값을 참조하면서 없는 값을 사용하지 않는 필드
//--외래키로 유지되는 무결성을 참조무결성이라고 부릅니다
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
