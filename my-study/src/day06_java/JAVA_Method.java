package day06_java;
//메소드(method):function(함수)라고도 부름.(자바에서 function보다 method 주로 사용)
//반복되는 코드를 별도로 정의하고 그 이름을 불러서 코드 실행

//특징
//1 명령들이 모여서 기능을 정의하는 단위
//2 일련의 실행코드들을 묶어서 재활용
//3 메서드마다 고유한 이름이 있다
//4 메서드가 이름이 불려져 실행되라는 명령을 받으면 그 메서드의 몸체를 이루는 코드들이 실행되는 형식
//5 자바의 메서드는 항상 ( )를 달고 나옴

//메서드생성:반드시 클래스 내부에서만 선언/ 선언후 메서드이름을 호출해야만 실행됨

/**매개변수
 메서드 호출시 메서드가 필요로하는 데이터를 전달해줄수있는 매개역할의 변수
 메서드의 몸체에서 괄호안에 위치하면 전달된값을 받아주는 변수: 매개변수
 메서드 호출시 괄호안에 넣어주는 데이터: 전달인수
전달인수는 반드시 매개변수의 자료형과 일치/다수개의 값 전달할때도 자료형과 순서 일치해야함
 
  매개변수선언
  : public static void 메서드명 (자료형매개변수){
  }필요한 갯수만큼 선언가능(자료형이 동일해도 생략x,하나하나 다 써야함)
  
 public:공용/누구나 사용할수있는 메서드의 앞에 표기
 static:첨으로 만들어지는 의미 
 void:리턴값x 
 
 매개변수의 역할
 main영역의 변수와 매개변수영역의 변수 이름이 같아도 상관없다
 이를 지역변수라 함 : { } 중괄호 안에 선언된 변수
 { } 벗어나면 소멸
**/

//개발자 필요에 의해 만들어진 메서드는 반드시 클래스안에 정의되어야함
//생성된 메서들 간에 자유롭게 서로 호출하여 사용할수있음
//메서들을 둘러싼 클래스에 속한 멤버들이라고도 부름
//main메서드는 제외, main을 호출한다는건 프로그램 시작한다는 뜻

public class JAVA_Method {
//메서드 정의는 main기준 위에나 아래에 정의 가능
	
	public static void main(String[] args) {
	System.out.println("시작"); //(1)
	 myPrint(12); //(2) 100:전달인수->a로 전달
//만든 메서드 호출, 메서드의 몸체로 포커스가 이동한 뒤 실행하고 다시 제자리로 돌아옴
	System.out.println("종료");//(3)

	}
//메서드 정의하고 이름을 부르면 메서드의 몸체가되는 코드 실행
	public static void myPrint(int n) { //int:자료형/n:매개변수
		System.out.println("메서드 실행 " + n);//(2)
		System.out.printf("메서드 실행 %d", n);
	}
}

